#include <WiFi.h>
#include <WebServer.h>
#include <Wire.h>
#include <OneWire.h>
#include <DallasTemperature.h>
#include <Arduino.h>
#include <DFRobot_ESP_EC.h>
#include <EEPROM.h>
#include <SimpleTimer.h>
#include <FirebaseESP32.h>
#include "DFRobot_EC.h"
const int oneWireBus = 4;
OneWire oneWire(oneWireBus);
DallasTemperature sensors(&oneWire);
int tdsSensor = 1;
float tdsValue = 0;
float Voltage = 0;
int samples = 10;
float adc_resolution = 4095.0;
float x;
#include <Arduino.h>
#define RXp2 16
#define TXp2 17
#define DO_PIN 39
#define VREF 5000    //VREF (mv)
#define ADC_RES 1024 //ADC Resolution
//Single-point calibration Mode=0
//Two-point calibration Mode=1
#define TWO_POINT_CALIBRATION 0
#define READ_TEMP (25) //Current water temperature ℃, Or temperature sensor function
//Single point calibration needs to be filled CAL1_V and CAL1_T
#define CAL1_V (1900) //mv
#define CAL1_T (25)   //℃
//Two-point calibration needs to be filled CAL2_V and CAL2_T
//CAL1 High temperature point, CAL2 Low temperature point
#define CAL2_V (1000) //mv
#define CAL2_T (15)   //℃
const uint16_t DO_Table[41] = {
  14460, 14220, 13820, 13440, 13090, 12740, 12420, 12110, 11810, 11530,
  11260, 11010, 10770, 10530, 10300, 10080, 9860, 9660, 9460, 9270,
  9080, 8900, 8730, 8570, 8410, 8250, 8110, 7960, 7820, 7690,
  7560, 7430, 7300, 7180, 7070, 6950, 6840, 6730, 6630, 6530, 6410
};
uint8_t Temperaturet1;
uint16_t ADC_Raw;
uint16_t ADC_Voltage;
uint16_t DO;
float DO1;
int16_t readDO(uint32_t voltage_mv, uint8_t temperature_c)
{
#if TWO_POINT_CALIBRATION == 00
  uint16_t V_saturation = (uint32_t)CAL1_V + (uint32_t)35 * temperature_c - (uint32_t)CAL1_T * 35;
  return (voltage_mv * DO_Table[temperature_c] / V_saturation);
#else
  uint16_t V_saturation = (int16_t)((int8_t)temperature_c - CAL2_T) * ((uint16_t)CAL1_V - CAL2_V) / ((uint8_t)CAL1_T - CAL2_T) + CAL2_V;
  return (voltage_mv * DO_Table[temperature_c] / V_saturation);
#endif
}
#define EC_PIN 34
float voltage_EC, ecValue, temperature_EC;
DFRobot_EC ec;

#define FIREBASE_HOST "water-quality-a5c93-default-rtdb.firebaseio.com/"
#define WIFI_SSID "********"
#define WIFI_PASSWORD "*********"
#define FIREBASE_Authorization_key "a************"

FirebaseData firebaseData;
FirebaseJson json;

void setup() {
  Serial.begin(115200);
  Serial2.begin(9600, SERIAL_8N1, RXp2, TXp2);
  Wire.begin();
  sensors.begin();
  ec.begin();
  WiFi.begin (WIFI_SSID, WIFI_PASSWORD);
  Serial.print("Connecting...");
  while (WiFi.status() != WL_CONNECTED)
  {
    Serial.print(".");
    delay(300);
  }
  Serial.println();
  Serial.print("IP Address: ");
  Serial.println(WiFi.localIP());
  Serial.println();
  Firebase.begin(FIREBASE_HOST, FIREBASE_Authorization_key);
}

float ph(float voltage) {
  return 7 + ((2.5 - voltage) / 0.18);
}

void loop() {
  Serial.println("");
  sensors.requestTemperatures();
  float temperatureC = sensors.getTempCByIndex(0);
  float temperatureF = sensors.getTempFByIndex(0);
  Serial.println("Temperature:");
  Serial.print(temperatureC);
  Serial.println("ºC");
  Serial.print(temperatureF);
  Serial.println("ºF");
  delay(1000);

  tdsSensor = analogRead(36);
  Voltage = tdsSensor * 5 / 4095.0; //Convert analog reading to Voltage
  tdsValue = (133.42 * Voltage * Voltage * Voltage - 255.86 * Voltage * Voltage + 857.39 * Voltage) * 0.5; //Convert voltage value to TDS value

  Serial.print("TDS Value = ");
  Serial.print(tdsValue);
  Serial.println(" ppm");
  delay(1000);// Replace with

  int measurings = 0;
  for (int i = 0; i < samples; i++)
  { measurings += analogRead(35);
    delay(10);
  }
  float voltage = 5 / adc_resolution * measurings / samples;
  x = ((ph(voltage))-2);

  Serial.print("pH= ");
  Serial.println(x);
  delay(1000);
  Temperaturet1 = temperatureC;
  ADC_Raw = analogRead(DO_PIN);
  ADC_Voltage = uint32_t(VREF) * ADC_Raw / ADC_RES;

  Serial.print("Temperaturet:\t" + String(Temperaturet1) + "\t");
  Serial.print("ADC RAW:\t" + String(ADC_Raw) + "\t");
  Serial.print("ADC Voltage:\t" + String(ADC_Voltage) + "\t");
  DO = readDO(ADC_Voltage, Temperaturet1);
  DO1 = DO/1000;                       
  Serial.println("DO:\t" + String(DO1) + "\t");
  delay(1000);

String  salinity = Serial2.readString();
float salinity1 = salinity.toFloat();
  Serial.println(salinity1);

Firebase.setFloat(firebaseData, "/ESP32/TEMPE  RATURE", temperatureC);
  Firebase.setFloat(firebaseData, "/ESP32/TDS Value", tdsValue);
  Firebase.setFloat(firebaseData, "/ESP32/pH", x);
  Firebase.setFloat(firebaseData, "/ESP32/DO", DO1);
  Firebase.setFloat(firebaseData, "/ESP32/Salinity", salinity1);
  delay(200);
  Serial.println("________________________________________________");
}
